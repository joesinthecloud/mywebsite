name: Build & Deploy (Pages + S3 Mirror)

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write   # required for OIDC

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # If you use a static generator, build to a folder and set 'path' to that folder.
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: .   # change to your build output folder if you build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Download built site artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages     # must match the upload action's default name
          path: site             # this will contain the rendered site

      - uses: actions/github-script@v7
        id: oidc
        with:
          script: |
            const token = await core.getIDToken('sts.amazonaws.com');
            core.setOutput('token', token);
      
      - name: Show OIDC claims (TEMP)
        run: |
          python - <<'PY'
          import os, json, base64
          tok=os.environ['TOKEN']
          payload=tok.split('.')[1] + '=='
          data=json.loads(base64.urlsafe_b64decode(payload).decode())
          print('aud:', data.get('aud'))
          print('sub:', data.get('sub'))
          PY
        env:
          TOKEN: ${{ steps.oidc.outputs.token }}


      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::949367020370:role/mywebsite-roles
          aws-region: us-east-1

      - name: Mirror site to S3 (failover origin)
        run: aws s3 sync "site/" "s3://joesinthecloud-mirror/" --delete
  


      
